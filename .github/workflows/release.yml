name: Build and Release Electron App

on:
    push:
        branches:
            - main

permissions:
    contents: write

jobs:
    build-windows:
        name: Build Windows
        runs-on: windows-latest

        outputs:
            tag: ${{ steps.generate_tag.outputs.tag }}

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Install Dependencies
              run: npm install

            - name: Generate Tag
              id: generate_tag
              run: |
                  $VERSION = (Get-Date -Format "yyyyMMddHHmmss")
                  git config user.name "github-actions"
                  git config user.email "github-actions@github.com"
                  git tag -a "v$VERSION" -m "Automated release tag v$VERSION"
                  git push origin "v$VERSION"
                  echo "TAG=v$VERSION"
                  echo "::set-output name=tag::v$VERSION"

            - name: Build Windows App
              run: npm run build:win
              env:
                  GH_TOKEN: ${{ secrets.GH_TOKEN }}

            - name: Upload Windows Build to GitHub Releases
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ steps.generate_tag.outputs.tag }}
                  files: |
                      dist/*.exe
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    build-macos:
        name: Build macOS
        runs-on: macos-latest
        needs: build-windows

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Install Dependencies
              run: npm install

            - name: Get Tag from Windows Build
              run: |
                  echo "Using tag from Windows build: ${{ needs.build-windows.outputs.tag }}"
                  echo "TAG=${{ needs.build-windows.outputs.tag }}" >> $GITHUB_ENV

            - name: Build macOS App
              run: npm run build:mac
              env:
                  GH_TOKEN: ${{ secrets.GH_TOKEN }}

            - name: Upload macOS Build to GitHub Releases
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ needs.build-windows.outputs.tag }}
                  files: |
                      dist/*.dmg
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
